var documenterSearchIndex = {"docs":
[{"location":"wrappers/#PETSc-wrappers","page":"PETSc wrappers","title":"PETSc wrappers","text":"","category":"section"},{"location":"wrappers/","page":"PETSc wrappers","title":"PETSc wrappers","text":"List of of the Julia wrappers for the C functions and objects of the PETSc library. This is an incomplete list, based on what has been used in the past. If you are missing a wrapper for a specific function, it can be easily added using the GridapPETSc.PETSC.@wrapper macro.","category":"page"},{"location":"wrappers/","page":"PETSc wrappers","title":"PETSc wrappers","text":"Modules = [GridapPETSc.PETSC]","category":"page"},{"location":"wrappers/#GridapPETSc.PETSC","page":"PETSc wrappers","title":"GridapPETSc.PETSC","text":"Low level interface with PETSC, which serve as the back-end in GridapPETSc.\n\nThe types and functions defined here are almost 1-to-1 to the corresponding C counterparts. In particular, the types defined can be directly used to call C PETSc routines via ccall. When a C function expects a pointer, use a Ref to the corresponding Julia alias. E.g., if an argument is PetscBool * in the C code, pass an object with type Ref{PetscBool} from the Julia code. Using this rule, PETSC.PetscInitialized can be called as\n\nflag = Ref{PetscBool}()\n@check_error_code PetscInitialized(flag)\nif flag[] == PETSC_TRUE\n  println(\"Petsc is initialized!\")\nend\n\n\n\n\n\n","category":"module"},{"location":"wrappers/#GridapPETSc.PETSC.PETSC_DECIDE","page":"PETSc wrappers","title":"GridapPETSc.PETSC.PETSC_DECIDE","text":"Julia constant storing the PETSC_DECIDE value.\n\nSee PETSc manual.\n\n\n\n\n\n","category":"constant"},{"location":"wrappers/#GridapPETSc.PETSC.PETSC_DEFAULT","page":"PETSc wrappers","title":"GridapPETSc.PETSC.PETSC_DEFAULT","text":"Julia constant storing the PETSC_DEFAULT value.\n\nSee PETSc manual.\n\n\n\n\n\n","category":"constant"},{"location":"wrappers/#GridapPETSc.PETSC.PETSC_DETERMINE","page":"PETSc wrappers","title":"GridapPETSc.PETSC.PETSC_DETERMINE","text":"Julia constant storing the PETSC_DETERMINE value.\n\nSee PETSc manual.\n\n\n\n\n\n","category":"constant"},{"location":"wrappers/#GridapPETSc.PETSC.IS","page":"PETSc wrappers","title":"GridapPETSc.PETSC.IS","text":"Julia alias for the IS C type.\n\nSee PETSc manual.\n\n\n\n\n\n","category":"type"},{"location":"wrappers/#GridapPETSc.PETSC.InsertMode","page":"PETSc wrappers","title":"GridapPETSc.PETSC.InsertMode","text":"Julia alias for the InsertMode C enum.\n\nSee PETSc manual.\n\n\n\n\n\n","category":"type"},{"location":"wrappers/#GridapPETSc.PETSC.KSP","page":"PETSc wrappers","title":"GridapPETSc.PETSC.KSP","text":"Julia alias for the KSP C type.\n\nSee PETSc manual.\n\n\n\n\n\n","category":"type"},{"location":"wrappers/#GridapPETSc.PETSC.KSPType","page":"PETSc wrappers","title":"GridapPETSc.PETSC.KSPType","text":"Julia alias for KSPType C type.\n\nSee PETSc manual.\n\n\n\n\n\n","category":"type"},{"location":"wrappers/#GridapPETSc.PETSC.Mat","page":"PETSc wrappers","title":"GridapPETSc.PETSC.Mat","text":"Julia alias for the Mat C type.\n\nSee PETSc manual.\n\n\n\n\n\n","category":"type"},{"location":"wrappers/#GridapPETSc.PETSC.MatAssemblyType","page":"PETSc wrappers","title":"GridapPETSc.PETSC.MatAssemblyType","text":"Julia alias for the MatAssemblyType C enum.\n\nSee PETSc manual.\n\n\n\n\n\n","category":"type"},{"location":"wrappers/#GridapPETSc.PETSC.MatDuplicateOption","page":"PETSc wrappers","title":"GridapPETSc.PETSC.MatDuplicateOption","text":"Julia alias for the MatDuplicateOption C enum.\n\nSee PETSc manual.\n\n\n\n\n\n","category":"type"},{"location":"wrappers/#GridapPETSc.PETSC.MatInfo","page":"PETSc wrappers","title":"GridapPETSc.PETSC.MatInfo","text":"Julia alias for the MatInfo C struct.\n\nSee PETSc manual.\n\n\n\n\n\n","category":"type"},{"location":"wrappers/#GridapPETSc.PETSC.MatInfoType","page":"PETSc wrappers","title":"GridapPETSc.PETSC.MatInfoType","text":"Julia alias for the MatInfoType C enum.\n\nSee PETSc manual.\n\n\n\n\n\n","category":"type"},{"location":"wrappers/#GridapPETSc.PETSC.MatNullSpace","page":"PETSc wrappers","title":"GridapPETSc.PETSC.MatNullSpace","text":"Julia alias for the MatNullSpace C type.\n\nSee PETSc manual.\n\n\n\n\n\n","category":"type"},{"location":"wrappers/#GridapPETSc.PETSC.MatReuse","page":"PETSc wrappers","title":"GridapPETSc.PETSC.MatReuse","text":"Julia alias for the MatReuse C enum.\n\nSee PETSc manual.\n\n\n\n\n\n","category":"type"},{"location":"wrappers/#GridapPETSc.PETSC.MatStructure","page":"PETSc wrappers","title":"GridapPETSc.PETSC.MatStructure","text":"Julia alias for the MatStructure C enum.\n\nSee PETSc manual.\n\n\n\n\n\n","category":"type"},{"location":"wrappers/#GridapPETSc.PETSC.MatType","page":"PETSc wrappers","title":"GridapPETSc.PETSC.MatType","text":"Julia alias for MatType C type.\n\nSee PETSc manual.\n\n\n\n\n\n","category":"type"},{"location":"wrappers/#GridapPETSc.PETSC.NormType","page":"PETSc wrappers","title":"GridapPETSc.PETSC.NormType","text":"Julia alias for the NormType C enum.\n\nSee PETSc manual.\n\n\n\n\n\n","category":"type"},{"location":"wrappers/#GridapPETSc.PETSC.PC","page":"PETSc wrappers","title":"GridapPETSc.PETSC.PC","text":"Julia alias for the PC C type.\n\nSee PETSc manual.\n\n\n\n\n\n","category":"type"},{"location":"wrappers/#GridapPETSc.PETSC.PCType","page":"PETSc wrappers","title":"GridapPETSc.PETSC.PCType","text":"Julia alias for PCType C type.\n\nSee PETSc manual.\n\n\n\n\n\n","category":"type"},{"location":"wrappers/#GridapPETSc.PETSC.PetscBool","page":"PETSc wrappers","title":"GridapPETSc.PETSC.PetscBool","text":"Julia alias to PetscBool C enum.\n\nSee PETSc manual.\n\n\n\n\n\n","category":"type"},{"location":"wrappers/#GridapPETSc.PETSC.PetscCopyMode","page":"PETSc wrappers","title":"GridapPETSc.PETSC.PetscCopyMode","text":"Julia alias for the PetscCopyMode C enum.\n\nSee PETSc manual.\n\n\n\n\n\n","category":"type"},{"location":"wrappers/#GridapPETSc.PETSC.PetscDataType","page":"PETSc wrappers","title":"GridapPETSc.PETSC.PetscDataType","text":"Julia alias to PetscDataType C enum.\n\nSee PETSc manual.\n\n\n\n\n\n","category":"type"},{"location":"wrappers/#GridapPETSc.PETSC.PetscError","page":"PETSc wrappers","title":"GridapPETSc.PETSC.PetscError","text":"struct PetscError <: Exception\n  code::PetscErrorCode\nend\n\nCustom Exception thrown by @check_error_code.\n\n\n\n\n\n","category":"type"},{"location":"wrappers/#GridapPETSc.PETSC.PetscErrorCode","page":"PETSc wrappers","title":"GridapPETSc.PETSC.PetscErrorCode","text":"Julia alias to PetscErrorCode C type.\n\nSee PETSc manual.\n\n\n\n\n\n","category":"type"},{"location":"wrappers/#GridapPETSc.PETSC.PetscInt","page":"PETSc wrappers","title":"GridapPETSc.PETSC.PetscInt","text":"Julia alias for PetscInt C type.\n\nSee PETSc manual.\n\n\n\n\n\n","category":"type"},{"location":"wrappers/#GridapPETSc.PETSC.PetscLogDouble","page":"PETSc wrappers","title":"GridapPETSc.PETSC.PetscLogDouble","text":"Julia alias to PetscLogDouble C type.\n\nSee PETSc manual.\n\n\n\n\n\n","category":"type"},{"location":"wrappers/#GridapPETSc.PETSC.PetscReal","page":"PETSc wrappers","title":"GridapPETSc.PETSC.PetscReal","text":"Julia alias for PetscReal C type.\n\nSee PETSc manual.\n\n\n\n\n\n","category":"type"},{"location":"wrappers/#GridapPETSc.PETSC.PetscScalar","page":"PETSc wrappers","title":"GridapPETSc.PETSC.PetscScalar","text":"Julia alias for PetscScalar C type.\n\nSee PETSc manual.\n\n\n\n\n\n","category":"type"},{"location":"wrappers/#GridapPETSc.PETSC.PetscViewer","page":"PETSc wrappers","title":"GridapPETSc.PETSC.PetscViewer","text":"Julia alias for PetscViewer C type.\n\nSee PETSc manual.\n\n\n\n\n\n","category":"type"},{"location":"wrappers/#GridapPETSc.PETSC.SNES","page":"PETSc wrappers","title":"GridapPETSc.PETSC.SNES","text":"Julia alias for the SNES C type.\n\nSee PETSc manual.\n\n\n\n\n\n","category":"type"},{"location":"wrappers/#GridapPETSc.PETSC.SNESConvergedReason","page":"PETSc wrappers","title":"GridapPETSc.PETSC.SNESConvergedReason","text":"Julia alias to SNESConvergedReason C enum.\n\nSee PETSc manual.\n\n\n\n\n\n","category":"type"},{"location":"wrappers/#GridapPETSc.PETSC.Vec","page":"PETSc wrappers","title":"GridapPETSc.PETSC.Vec","text":"Julia alias for the Vec C type.\n\nSee PETSc manual.\n\n\n\n\n\n","category":"type"},{"location":"wrappers/#GridapPETSc.PETSC.VecOption","page":"PETSc wrappers","title":"GridapPETSc.PETSC.VecOption","text":"Julia alias for the VecOption C enum.\n\nSee PETSc manual.\n\n\n\n\n\n","category":"type"},{"location":"wrappers/#GridapPETSc.PETSC.ISBlockSetIndices-NTuple{5, Any}","page":"PETSc wrappers","title":"GridapPETSc.PETSC.ISBlockSetIndices","text":"ISBlockSetIndices(is, bs, n, idx, mode)\n\nSee PETSc manual.\n\n\n\n\n\n","category":"method"},{"location":"wrappers/#GridapPETSc.PETSC.ISCreateBlock-NTuple{6, Any}","page":"PETSc wrappers","title":"GridapPETSc.PETSC.ISCreateBlock","text":"ISCreateBlock(comm, bs, n, idx, mode, is)\n\nSee PETSc manual.\n\n\n\n\n\n","category":"method"},{"location":"wrappers/#GridapPETSc.PETSC.ISCreateGeneral-NTuple{5, Any}","page":"PETSc wrappers","title":"GridapPETSc.PETSC.ISCreateGeneral","text":"ISCreateGeneral(comm, n, idx, mode, is)\n\nSee PETSc manual.\n\n\n\n\n\n","category":"method"},{"location":"wrappers/#GridapPETSc.PETSC.ISCreateStride-NTuple{5, Any}","page":"PETSc wrappers","title":"GridapPETSc.PETSC.ISCreateStride","text":"ISCreateStride(comm, n, first, step, is)\n\nSee PETSc manual.\n\n\n\n\n\n","category":"method"},{"location":"wrappers/#GridapPETSc.PETSC.ISDestroy-Tuple{Any}","page":"PETSc wrappers","title":"GridapPETSc.PETSC.ISDestroy","text":"ISDestroy(is)\n\nSee PETSc manual.\n\n\n\n\n\n","category":"method"},{"location":"wrappers/#GridapPETSc.PETSC.ISDuplicate-Tuple{Any, Any}","page":"PETSc wrappers","title":"GridapPETSc.PETSC.ISDuplicate","text":"ISDuplicate(is, newis)\n\nSee PETSc manual.\n\n\n\n\n\n","category":"method"},{"location":"wrappers/#GridapPETSc.PETSC.ISGeneralSetIndices-NTuple{4, Any}","page":"PETSc wrappers","title":"GridapPETSc.PETSC.ISGeneralSetIndices","text":"ISGeneralSetIndices(is, n, idx, mode)\n\nSee PETSc manual.\n\n\n\n\n\n","category":"method"},{"location":"wrappers/#GridapPETSc.PETSC.ISGetIndices-Tuple{Any, Any}","page":"PETSc wrappers","title":"GridapPETSc.PETSC.ISGetIndices","text":"ISGetIndices(is, ptr)\n\nSee PETSc manual.\n\n\n\n\n\n","category":"method"},{"location":"wrappers/#GridapPETSc.PETSC.ISGetSize-Tuple{Any, Any}","page":"PETSc wrappers","title":"GridapPETSc.PETSC.ISGetSize","text":"ISGetSize(is, n)\n\nSee PETSc manual.\n\n\n\n\n\n","category":"method"},{"location":"wrappers/#GridapPETSc.PETSC.ISSetType-Tuple{Any, Any}","page":"PETSc wrappers","title":"GridapPETSc.PETSC.ISSetType","text":"ISSetType(is, method)\n\nSee PETSc manual.\n\n\n\n\n\n","category":"method"},{"location":"wrappers/#GridapPETSc.PETSC.KSPCreate-Tuple{Any, Any}","page":"PETSc wrappers","title":"GridapPETSc.PETSC.KSPCreate","text":"KSPCreate(comm, inksp)\n\nSee PETSc manual.\n\n\n\n\n\n","category":"method"},{"location":"wrappers/#GridapPETSc.PETSC.KSPDestroy-Tuple{Any}","page":"PETSc wrappers","title":"GridapPETSc.PETSC.KSPDestroy","text":"KSPDestroy(ksp)\n\nSee PETSc manual.\n\n\n\n\n\n","category":"method"},{"location":"wrappers/#GridapPETSc.PETSC.KSPGetIterationNumber-Tuple{Any, Any}","page":"PETSc wrappers","title":"GridapPETSc.PETSC.KSPGetIterationNumber","text":"KSPGetIterationNumber(ksp, its)\n\nSee PETSc manual.\n\n\n\n\n\n","category":"method"},{"location":"wrappers/#GridapPETSc.PETSC.KSPGetOperators-Tuple{Any, Any, Any}","page":"PETSc wrappers","title":"GridapPETSc.PETSC.KSPGetOperators","text":"KSPGetOperators(ksp, Amat, Pmat)\n\nSee PETSc manual.\n\n\n\n\n\n","category":"method"},{"location":"wrappers/#GridapPETSc.PETSC.KSPGetPC-Tuple{Any, Any}","page":"PETSc wrappers","title":"GridapPETSc.PETSC.KSPGetPC","text":"KSPGetPC(ksp, pc)\n\nSee PETSc manual.\n\n\n\n\n\n","category":"method"},{"location":"wrappers/#GridapPETSc.PETSC.KSPGetResidualNorm-Tuple{Any, Any}","page":"PETSc wrappers","title":"GridapPETSc.PETSC.KSPGetResidualNorm","text":"KSPGetResidualNorm(ksp, rnorm)\n\nSee PETSc manual.\n\n\n\n\n\n","category":"method"},{"location":"wrappers/#GridapPETSc.PETSC.KSPSetFromOptions-Tuple{Any}","page":"PETSc wrappers","title":"GridapPETSc.PETSC.KSPSetFromOptions","text":"KSPSetFromOptions(ksp)\n\nSee PETSc manual.\n\n\n\n\n\n","category":"method"},{"location":"wrappers/#GridapPETSc.PETSC.KSPSetInitialGuessNonzero-Tuple{Any, Any}","page":"PETSc wrappers","title":"GridapPETSc.PETSC.KSPSetInitialGuessNonzero","text":"KSPSetInitialGuessNonzero(ksp, flg)\n\nSee PETSc manual.\n\n\n\n\n\n","category":"method"},{"location":"wrappers/#GridapPETSc.PETSC.KSPSetOperators-Tuple{Any, Any, Any}","page":"PETSc wrappers","title":"GridapPETSc.PETSC.KSPSetOperators","text":"KSPSetOperators(ksp, Amat, Pmat)\n\nSee PETSc manual.\n\n\n\n\n\n","category":"method"},{"location":"wrappers/#GridapPETSc.PETSC.KSPSetOptionsPrefix-Tuple{Any, Any}","page":"PETSc wrappers","title":"GridapPETSc.PETSC.KSPSetOptionsPrefix","text":"KSPSetOptionsPrefix(ksp, prefix)\n\nSee PETSc manual.\n\n\n\n\n\n","category":"method"},{"location":"wrappers/#GridapPETSc.PETSC.KSPSetTolerances-NTuple{5, Any}","page":"PETSc wrappers","title":"GridapPETSc.PETSC.KSPSetTolerances","text":"KSPSetTolerances(ksp, rtol, abstol, dtol, maxits)\n\nSee PETSc manual.\n\n\n\n\n\n","category":"method"},{"location":"wrappers/#GridapPETSc.PETSC.KSPSetType-Tuple{Any, Any}","page":"PETSc wrappers","title":"GridapPETSc.PETSC.KSPSetType","text":"KSPSetType(ksp, typ)\n\nSee PETSc manual.\n\n\n\n\n\n","category":"method"},{"location":"wrappers/#GridapPETSc.PETSC.KSPSetUp-Tuple{Any}","page":"PETSc wrappers","title":"GridapPETSc.PETSC.KSPSetUp","text":"KSPSetUp(ksp)\n\nSee PETSc manual.\n\n\n\n\n\n","category":"method"},{"location":"wrappers/#GridapPETSc.PETSC.KSPSolve-Tuple{Any, Any, Any}","page":"PETSc wrappers","title":"GridapPETSc.PETSC.KSPSolve","text":"KSPSolve(ksp, b, x)\n\nSee PETSc manual.\n\n\n\n\n\n","category":"method"},{"location":"wrappers/#GridapPETSc.PETSC.KSPSolveTranspose-Tuple{Any, Any, Any}","page":"PETSc wrappers","title":"GridapPETSc.PETSC.KSPSolveTranspose","text":"KSPSolveTranspose(ksp, b, x)\n\nSee PETSc manual.\n\n\n\n\n\n","category":"method"},{"location":"wrappers/#GridapPETSc.PETSC.KSPView-Tuple{Any, Any}","page":"PETSc wrappers","title":"GridapPETSc.PETSC.KSPView","text":"KSPView(ksp, viewer)\n\nSee PETSc manual.\n\n\n\n\n\n","category":"method"},{"location":"wrappers/#GridapPETSc.PETSC.MatAssemblyBegin-Tuple{Any, Any}","page":"PETSc wrappers","title":"GridapPETSc.PETSC.MatAssemblyBegin","text":"MatAssemblyBegin(mat, typ)\n\nSee PETSc manual.\n\n\n\n\n\n","category":"method"},{"location":"wrappers/#GridapPETSc.PETSC.MatAssemblyEnd-Tuple{Any, Any}","page":"PETSc wrappers","title":"GridapPETSc.PETSC.MatAssemblyEnd","text":"MatAssemblyEnd(mat, typ)\n\nSee PETSc manual.\n\n\n\n\n\n","category":"method"},{"location":"wrappers/#GridapPETSc.PETSC.MatConvert-NTuple{4, Any}","page":"PETSc wrappers","title":"GridapPETSc.PETSC.MatConvert","text":"MatConvert(mat, newtype, reuse, M)\n\nSee PETSc manual.\n\n\n\n\n\n","category":"method"},{"location":"wrappers/#GridapPETSc.PETSC.MatCopy-Tuple{Any, Any, Any}","page":"PETSc wrappers","title":"GridapPETSc.PETSC.MatCopy","text":"MatCopy(A, B, str)\n\nSee PETSc manual.\n\n\n\n\n\n","category":"method"},{"location":"wrappers/#GridapPETSc.PETSC.MatCreateAIJ-NTuple{10, Any}","page":"PETSc wrappers","title":"GridapPETSc.PETSC.MatCreateAIJ","text":"MatCreateAIJ(comm, m, n, M, N, d_nz, d_nnz, o_nz, o_nnz, mat)\n\nSee PETSc manual.\n\n\n\n\n\n","category":"method"},{"location":"wrappers/#GridapPETSc.PETSC.MatCreateMPIAIJWithArrays-NTuple{9, Any}","page":"PETSc wrappers","title":"GridapPETSc.PETSC.MatCreateMPIAIJWithArrays","text":"MatCreateMPIAIJWithArrays(comm, m, n, M, N, i, j, a, mat)\n\nSee PETSc manual.\n\n\n\n\n\n","category":"method"},{"location":"wrappers/#GridapPETSc.PETSC.MatCreateSeqAIJ-NTuple{6, Any}","page":"PETSc wrappers","title":"GridapPETSc.PETSC.MatCreateSeqAIJ","text":"MatCreateSeqAIJ(comm, m, n, nz, nnz, mat)\n\nSee PETSc manual.\n\n\n\n\n\n","category":"method"},{"location":"wrappers/#GridapPETSc.PETSC.MatCreateSeqAIJWithArrays-NTuple{7, Any}","page":"PETSc wrappers","title":"GridapPETSc.PETSC.MatCreateSeqAIJWithArrays","text":"MatCreateSeqAIJWithArrays(comm, m, n, i, j, a, mat)\n\nSee PETSc manual.\n\n\n\n\n\n","category":"method"},{"location":"wrappers/#GridapPETSc.PETSC.MatDestroy-Tuple{Any}","page":"PETSc wrappers","title":"GridapPETSc.PETSC.MatDestroy","text":"MatDestroy(A)\n\nSee PETSc manual.\n\n\n\n\n\n","category":"method"},{"location":"wrappers/#GridapPETSc.PETSC.MatEqual-Tuple{Any, Any, Any}","page":"PETSc wrappers","title":"GridapPETSc.PETSC.MatEqual","text":"MatEqual(A, B, flg)\n\nSee PETSc manual.\n\n\n\n\n\n","category":"method"},{"location":"wrappers/#GridapPETSc.PETSC.MatGetInfo-Tuple{Any, Any, Any}","page":"PETSc wrappers","title":"GridapPETSc.PETSC.MatGetInfo","text":"MatGetInfo(mat, flag, info)\n\nSee PETSc manual.\n\n\n\n\n\n","category":"method"},{"location":"wrappers/#GridapPETSc.PETSC.MatGetSize-Tuple{Any, Any, Any}","page":"PETSc wrappers","title":"GridapPETSc.PETSC.MatGetSize","text":"MatGetSize(mat, m, n)\n\nSee PETSc manual.\n\n\n\n\n\n","category":"method"},{"location":"wrappers/#GridapPETSc.PETSC.MatGetValues-NTuple{6, Any}","page":"PETSc wrappers","title":"GridapPETSc.PETSC.MatGetValues","text":"MatGetValues(mat, m, idxm, n, idxn, v)\n\nSee PETSc manual.\n\n\n\n\n\n","category":"method"},{"location":"wrappers/#GridapPETSc.PETSC.MatMult-Tuple{Any, Any, Any}","page":"PETSc wrappers","title":"GridapPETSc.PETSC.MatMult","text":"MatMult(mat, x, y)\n\nSee PETSc manual.\n\n\n\n\n\n","category":"method"},{"location":"wrappers/#GridapPETSc.PETSC.MatMultAdd-NTuple{4, Any}","page":"PETSc wrappers","title":"GridapPETSc.PETSC.MatMultAdd","text":"MatMultAdd(mat, v1, v2, v3)\n\nSee PETSc manual.\n\n\n\n\n\n","category":"method"},{"location":"wrappers/#GridapPETSc.PETSC.MatMumpsSetCntl-Tuple{Any, Any, Any}","page":"PETSc wrappers","title":"GridapPETSc.PETSC.MatMumpsSetCntl","text":"MatMumpsSetCntl(mat, icntl, val)\n\nSee PETSc manual.\n\n\n\n\n\n","category":"method"},{"location":"wrappers/#GridapPETSc.PETSC.MatMumpsSetIcntl-Tuple{Any, Any, Any}","page":"PETSc wrappers","title":"GridapPETSc.PETSC.MatMumpsSetIcntl","text":"MatMumpsSetIcntl(mat, icntl, val)\n\nSee PETSc manual.\n\n\n\n\n\n","category":"method"},{"location":"wrappers/#GridapPETSc.PETSC.MatNullSpaceCreate-NTuple{5, Any}","page":"PETSc wrappers","title":"GridapPETSc.PETSC.MatNullSpaceCreate","text":"MatNullSpaceCreate(comm, has_cnst, n, vecs, sp)\n\nSee PETSc manual.\n\n\n\n\n\n","category":"method"},{"location":"wrappers/#GridapPETSc.PETSC.MatNullSpaceCreateRigidBody-Tuple{Any, Any}","page":"PETSc wrappers","title":"GridapPETSc.PETSC.MatNullSpaceCreateRigidBody","text":"MatNullSpaceCreateRigidBody(coords, sp)\n\nSee PETSc manual.\n\n\n\n\n\n","category":"method"},{"location":"wrappers/#GridapPETSc.PETSC.MatNullSpaceDestroy-Tuple{Any}","page":"PETSc wrappers","title":"GridapPETSc.PETSC.MatNullSpaceDestroy","text":"MatNullSpaceDestroy(ns)\n\nSee PETSc manual.\n\n\n\n\n\n","category":"method"},{"location":"wrappers/#GridapPETSc.PETSC.MatScale-Tuple{Any, Any}","page":"PETSc wrappers","title":"GridapPETSc.PETSC.MatScale","text":"MatScale(mat, alpha)\n\nSee PETSc manual.\n\n\n\n\n\n","category":"method"},{"location":"wrappers/#GridapPETSc.PETSC.MatSetBlockSize-Tuple{Any, Any}","page":"PETSc wrappers","title":"GridapPETSc.PETSC.MatSetBlockSize","text":"MatSetBlockSize(mat, bs)\n\nSee PETSc manual.\n\n\n\n\n\n","category":"method"},{"location":"wrappers/#GridapPETSc.PETSC.MatSetNearNullSpace-Tuple{Any, Any}","page":"PETSc wrappers","title":"GridapPETSc.PETSC.MatSetNearNullSpace","text":"MatSetNearNullSpace(mat, nullsp)\n\nSee PETSc manual.\n\n\n\n\n\n","category":"method"},{"location":"wrappers/#GridapPETSc.PETSC.MatSetNullSpace-Tuple{Any, Any}","page":"PETSc wrappers","title":"GridapPETSc.PETSC.MatSetNullSpace","text":"MatSetNullSpace(mat, nullsp)\n\nSee PETSc manual.\n\n\n\n\n\n","category":"method"},{"location":"wrappers/#GridapPETSc.PETSC.MatSetValues-NTuple{7, Any}","page":"PETSc wrappers","title":"GridapPETSc.PETSC.MatSetValues","text":"MatSetValues(mat, m, idxm, n, idxn, v, addv)\n\nSee PETSc manual.\n\n\n\n\n\n","category":"method"},{"location":"wrappers/#GridapPETSc.PETSC.MatView-Tuple{Any, Any}","page":"PETSc wrappers","title":"GridapPETSc.PETSC.MatView","text":"MatView(mat, viewer)\n\nSee PETSc manual.\n\n\n\n\n\n","category":"method"},{"location":"wrappers/#GridapPETSc.PETSC.MatZeroEntries-Tuple{Any}","page":"PETSc wrappers","title":"GridapPETSc.PETSC.MatZeroEntries","text":"MatZeroEntries(mat)\n\nSee PETSc manual.\n\n\n\n\n\n","category":"method"},{"location":"wrappers/#GridapPETSc.PETSC.PCFactorGetMatrix-Tuple{Any, Any}","page":"PETSc wrappers","title":"GridapPETSc.PETSC.PCFactorGetMatrix","text":"PCFactorGetMatrix(ksp, mat)\n\nSee PETSc manual.\n\n\n\n\n\n","category":"method"},{"location":"wrappers/#GridapPETSc.PETSC.PCFactorSetMatSolverType-Tuple{Any, Any}","page":"PETSc wrappers","title":"GridapPETSc.PETSC.PCFactorSetMatSolverType","text":"PCFactorSetMatSolverType(pc, typ)\n\nSee PETSc manual.\n\n\n\n\n\n","category":"method"},{"location":"wrappers/#GridapPETSc.PETSC.PCFactorSetUpMatSolverType-Tuple{Any}","page":"PETSc wrappers","title":"GridapPETSc.PETSC.PCFactorSetUpMatSolverType","text":"PCFactorSetUpMatSolverType(pc)\n\nSee PETSc manual.\n\n\n\n\n\n","category":"method"},{"location":"wrappers/#GridapPETSc.PETSC.PCGetOperators-Tuple{Any, Any, Any}","page":"PETSc wrappers","title":"GridapPETSc.PETSC.PCGetOperators","text":"PCGetOperators(pc, Amat, Pmat)\n\nSee PETSc manual.\n\n\n\n\n\n","category":"method"},{"location":"wrappers/#GridapPETSc.PETSC.PCHPDDMHasNeumannMat-Tuple{Any, Any}","page":"PETSc wrappers","title":"GridapPETSc.PETSC.PCHPDDMHasNeumannMat","text":"PCHPDDMHasNeumannMat(pc, has)\n\nSee PETSc manual.\n\n\n\n\n\n","category":"method"},{"location":"wrappers/#GridapPETSc.PETSC.PCHPDDMSetAuxiliaryMat-NTuple{5, Any}","page":"PETSc wrappers","title":"GridapPETSc.PETSC.PCHPDDMSetAuxiliaryMat","text":"PCHPDDMSetAuxiliaryMat(pc, is, mat, setup, ctx)\n\nSee PETSc manual.\n\n\n\n\n\n","category":"method"},{"location":"wrappers/#GridapPETSc.PETSC.PCHPDDMSetRHSMat-Tuple{Any, Any}","page":"PETSc wrappers","title":"GridapPETSc.PETSC.PCHPDDMSetRHSMat","text":"PCHPDDMSetRHSMat(pc, mat)\n\nSee PETSc manual.\n\n\n\n\n\n","category":"method"},{"location":"wrappers/#GridapPETSc.PETSC.PCHPDDMSetSTShareSubKSP-Tuple{Any, Any}","page":"PETSc wrappers","title":"GridapPETSc.PETSC.PCHPDDMSetSTShareSubKSP","text":"PCHPDDMSetSTShareSubKSP(pc, share)\n\nSee PETSc manual.\n\n\n\n\n\n","category":"method"},{"location":"wrappers/#GridapPETSc.PETSC.PCHYPREAMSSetInteriorNodes-Tuple{Any, Any}","page":"PETSc wrappers","title":"GridapPETSc.PETSC.PCHYPREAMSSetInteriorNodes","text":"PCHYPREAMSSetInteriorNodes(pc, interior)\n\nSee PETSc manual.\n\n\n\n\n\n","category":"method"},{"location":"wrappers/#GridapPETSc.PETSC.PCHYPRESetAlphaPoissonMatrix-Tuple{Any, Any}","page":"PETSc wrappers","title":"GridapPETSc.PETSC.PCHYPRESetAlphaPoissonMatrix","text":"PCHYPRESetAlphaPoissonMatrix(pc, A)\n\nSee PETSc manual.\n\n\n\n\n\n","category":"method"},{"location":"wrappers/#GridapPETSc.PETSC.PCHYPRESetBetaPoissonMatrix-Tuple{Any, Any}","page":"PETSc wrappers","title":"GridapPETSc.PETSC.PCHYPRESetBetaPoissonMatrix","text":"PCHYPRESetBetaPoissonMatrix(pc, A)\n\nSee PETSc manual.\n\n\n\n\n\n","category":"method"},{"location":"wrappers/#GridapPETSc.PETSC.PCHYPRESetDiscreteCurl-Tuple{Any, Any}","page":"PETSc wrappers","title":"GridapPETSc.PETSC.PCHYPRESetDiscreteCurl","text":"PCHYPRESetDiscreteCurl(pc, C)\n\nSee PETSc manual.\n\n\n\n\n\n","category":"method"},{"location":"wrappers/#GridapPETSc.PETSC.PCHYPRESetDiscreteGradient-Tuple{Any, Any}","page":"PETSc wrappers","title":"GridapPETSc.PETSC.PCHYPRESetDiscreteGradient","text":"PCHYPRESetDiscreteGradient(pc, G)\n\nSee PETSc manual.\n\n\n\n\n\n","category":"method"},{"location":"wrappers/#GridapPETSc.PETSC.PCHYPRESetEdgeConstantVectors-NTuple{4, Any}","page":"PETSc wrappers","title":"GridapPETSc.PETSC.PCHYPRESetEdgeConstantVectors","text":"PCHYPRESetEdgeConstantVectors(pc, ozz, zoz, zzo)\n\nSee PETSc manual.\n\n\n\n\n\n","category":"method"},{"location":"wrappers/#GridapPETSc.PETSC.PCHYPRESetInterpolations-NTuple{6, Any}","page":"PETSc wrappers","title":"GridapPETSc.PETSC.PCHYPRESetInterpolations","text":"PCHYPRESetInterpolations(pc, dim, RT_PiFull, RT_Pi, ND_PiFull, ND_Pi)\n\nSee PETSc manual.\n\n\n\n\n\n","category":"method"},{"location":"wrappers/#GridapPETSc.PETSC.PCSetCoordinates-NTuple{4, Any}","page":"PETSc wrappers","title":"GridapPETSc.PETSC.PCSetCoordinates","text":"PCSetCoordinates(pc, dim, nloc, coords)\n\nSee PETSc manual.\n\n\n\n\n\n","category":"method"},{"location":"wrappers/#GridapPETSc.PETSC.PCSetFromOptions-Tuple{Any}","page":"PETSc wrappers","title":"GridapPETSc.PETSC.PCSetFromOptions","text":"PCSetFromOptions(pc)\n\nSee PETSc manual.\n\n\n\n\n\n","category":"method"},{"location":"wrappers/#GridapPETSc.PETSC.PCSetOperators-Tuple{Any, Any, Any}","page":"PETSc wrappers","title":"GridapPETSc.PETSC.PCSetOperators","text":"PCSetOperators(pc, Amat, Pmat)\n\nSee PETSc manual.\n\n\n\n\n\n","category":"method"},{"location":"wrappers/#GridapPETSc.PETSC.PCSetType-Tuple{Any, Any}","page":"PETSc wrappers","title":"GridapPETSc.PETSC.PCSetType","text":"PCSetType(pc, typ)\n\nSee PETSc manual.\n\n\n\n\n\n","category":"method"},{"location":"wrappers/#GridapPETSc.PETSC.PCView-Tuple{Any, Any}","page":"PETSc wrappers","title":"GridapPETSc.PETSC.PCView","text":"PCView(pc, viewer)\n\nSee PETSc manual.\n\n\n\n\n\n","category":"method"},{"location":"wrappers/#GridapPETSc.PETSC.PETSC_VIEWER_DRAW_-Tuple{Any}","page":"PETSc wrappers","title":"GridapPETSc.PETSC.PETSC_VIEWER_DRAW_","text":"PETSC_VIEWER_DRAW_(comm)\n\nSee PETSc manual.\n\n\n\n\n\n","category":"method"},{"location":"wrappers/#GridapPETSc.PETSC.PETSC_VIEWER_STDOUT_-Tuple{Any}","page":"PETSc wrappers","title":"GridapPETSc.PETSC.PETSC_VIEWER_STDOUT_","text":"PETSC_VIEWER_STDOUT_(comm)\n\nSee PETSc manual.\n\n\n\n\n\n","category":"method"},{"location":"wrappers/#GridapPETSc.PETSC.PetscDataTypeFromString-Tuple{Any, Any, Any}","page":"PETSc wrappers","title":"GridapPETSc.PETSC.PetscDataTypeFromString","text":"PetscDataTypeFromString(name,ptype,found)\n\nSee PETSc manual.\n\n\n\n\n\n","category":"method"},{"location":"wrappers/#GridapPETSc.PETSC.PetscDataTypeGetSize-Tuple{Any, Any}","page":"PETSc wrappers","title":"GridapPETSc.PETSC.PetscDataTypeGetSize","text":"PetscDataTypeGetSize(ptype,size)\n\nSee PETSc manual.\n\n\n\n\n\n","category":"method"},{"location":"wrappers/#GridapPETSc.PETSC.PetscFinalize-Tuple{}","page":"PETSc wrappers","title":"GridapPETSc.PETSC.PetscFinalize","text":"PetscFinalize()\n\nSee PETSc manual.\n\n\n\n\n\n","category":"method"},{"location":"wrappers/#GridapPETSc.PETSC.PetscFinalized-Tuple{Any}","page":"PETSc wrappers","title":"GridapPETSc.PETSC.PetscFinalized","text":"PetscFinalized(flag)\n\nSee PETSc manual.\n\n\n\n\n\n","category":"method"},{"location":"wrappers/#GridapPETSc.PETSC.PetscInitializeNoArguments-Tuple{}","page":"PETSc wrappers","title":"GridapPETSc.PETSC.PetscInitializeNoArguments","text":"PetscInitializeNoArguments()\n\nSee PETSc manual.\n\n\n\n\n\n","category":"method"},{"location":"wrappers/#GridapPETSc.PETSC.PetscInitializeNoPointers-NTuple{4, Any}","page":"PETSc wrappers","title":"GridapPETSc.PETSC.PetscInitializeNoPointers","text":"PetscInitializeNoPointers(argc, args, filename, help)\n\n\n\n\n\n","category":"method"},{"location":"wrappers/#GridapPETSc.PETSC.PetscInitialized-Tuple{Any}","page":"PETSc wrappers","title":"GridapPETSc.PETSC.PetscInitialized","text":"PetscInitialized(flag)\n\nSee PETSc manual.\n\n\n\n\n\n","category":"method"},{"location":"wrappers/#GridapPETSc.PETSC.PetscObjectRegisterDestroy-Tuple{Any}","page":"PETSc wrappers","title":"GridapPETSc.PETSC.PetscObjectRegisterDestroy","text":"PetscObjectRegisterDestroy(obj)\n\nSee PETSc manual.\n\n\n\n\n\n","category":"method"},{"location":"wrappers/#GridapPETSc.PETSC.PetscObjectRegisterDestroyAll-Tuple{}","page":"PETSc wrappers","title":"GridapPETSc.PETSC.PetscObjectRegisterDestroyAll","text":"PetscObjectRegisterDestroyAll()\n\nSee PETSc manual.\n\n\n\n\n\n","category":"method"},{"location":"wrappers/#GridapPETSc.PETSC.SNESConvergedDefault-NTuple{7, Any}","page":"PETSc wrappers","title":"GridapPETSc.PETSC.SNESConvergedDefault","text":"SNESConvergedDefault(snes, it, xnorm, gnorm, f, reason, user)\n\nSee PETSc manual.\n\n\n\n\n\n","category":"method"},{"location":"wrappers/#GridapPETSc.PETSC.SNESCreate-Tuple{Any, Any}","page":"PETSc wrappers","title":"GridapPETSc.PETSC.SNESCreate","text":"SNESCreate(comm, snes)\n\nSee PETSc manual.\n\n\n\n\n\n","category":"method"},{"location":"wrappers/#GridapPETSc.PETSC.SNESDestroy-Tuple{Any}","page":"PETSc wrappers","title":"GridapPETSc.PETSC.SNESDestroy","text":"SNESDestroy(snes)\n\nSee PETSc manual.\n\n\n\n\n\n","category":"method"},{"location":"wrappers/#GridapPETSc.PETSC.SNESGetIterationNumber-Tuple{Any, Any}","page":"PETSc wrappers","title":"GridapPETSc.PETSC.SNESGetIterationNumber","text":"SNESGetIterationNumber(snes, iter)\n\nSee PETSc manual.\n\n\n\n\n\n","category":"method"},{"location":"wrappers/#GridapPETSc.PETSC.SNESGetKSP-Tuple{Any, Any}","page":"PETSc wrappers","title":"GridapPETSc.PETSC.SNESGetKSP","text":"SNESGetKSP(snes, ksp)\n\nSee PETSc manual.\n\n\n\n\n\n","category":"method"},{"location":"wrappers/#GridapPETSc.PETSC.SNESGetLinearSolveFailures-Tuple{Any, Any}","page":"PETSc wrappers","title":"GridapPETSc.PETSC.SNESGetLinearSolveFailures","text":"SNESGetLinearSolveFailures(snes, nfails)\n\nSee PETSc manual.\n\n\n\n\n\n","category":"method"},{"location":"wrappers/#GridapPETSc.PETSC.SNESGetLinearSolveIterations-Tuple{Any, Any}","page":"PETSc wrappers","title":"GridapPETSc.PETSC.SNESGetLinearSolveIterations","text":"SNESGetLinearSolveIterations(snes, iter)\n\nSee PETSc manual.\n\n\n\n\n\n","category":"method"},{"location":"wrappers/#GridapPETSc.PETSC.SNESGetNumberFunctionEvals-Tuple{Any, Any}","page":"PETSc wrappers","title":"GridapPETSc.PETSC.SNESGetNumberFunctionEvals","text":"SNESGetNumberFunctionEvals(snes, nfuncs)\n\nSee PETSc manual.\n\n\n\n\n\n","category":"method"},{"location":"wrappers/#GridapPETSc.PETSC.SNESSetConvergenceTest-NTuple{4, Any}","page":"PETSc wrappers","title":"GridapPETSc.PETSC.SNESSetConvergenceTest","text":"SNESSetConvergenceTest(snes, convtest, cctx, destroy)\n\nSee PETSc manual.\n\n\n\n\n\n","category":"method"},{"location":"wrappers/#GridapPETSc.PETSC.SNESSetCountersReset-Tuple{Any, Any}","page":"PETSc wrappers","title":"GridapPETSc.PETSC.SNESSetCountersReset","text":"SNESSetCountersReset(snes, reset)\n\nSee PETSc manual.\n\n\n\n\n\n","category":"method"},{"location":"wrappers/#GridapPETSc.PETSC.SNESSetFromOptions-Tuple{Any}","page":"PETSc wrappers","title":"GridapPETSc.PETSC.SNESSetFromOptions","text":"SNESSetFromOptions(snes)\n\nSee PETSc manual.\n\n\n\n\n\n","category":"method"},{"location":"wrappers/#GridapPETSc.PETSC.SNESSetFunction-NTuple{4, Any}","page":"PETSc wrappers","title":"GridapPETSc.PETSC.SNESSetFunction","text":"SNESSetFunction(snes, vec, fptr, ctx)\n\nSee PETSc manual.\n\n\n\n\n\n","category":"method"},{"location":"wrappers/#GridapPETSc.PETSC.SNESSetJacobian-NTuple{5, Any}","page":"PETSc wrappers","title":"GridapPETSc.PETSC.SNESSetJacobian","text":"SNESSetJacobian(snes, A, P, jacptr, ctx)\n\nSee PETSc manual.\n\n\n\n\n\n","category":"method"},{"location":"wrappers/#GridapPETSc.PETSC.SNESSetType-Tuple{Any, Any}","page":"PETSc wrappers","title":"GridapPETSc.PETSC.SNESSetType","text":"SNESSetType(snes, type)\n\nSee PETSc manual.\n\n\n\n\n\n","category":"method"},{"location":"wrappers/#GridapPETSc.PETSC.SNESSolve-Tuple{Any, Any, Any}","page":"PETSc wrappers","title":"GridapPETSc.PETSC.SNESSolve","text":"SNESSolve(snes, b, x)\n\nSee PETSc manual.\n\n\n\n\n\n","category":"method"},{"location":"wrappers/#GridapPETSc.PETSC.SNESView-Tuple{Any, Any}","page":"PETSc wrappers","title":"GridapPETSc.PETSC.SNESView","text":"SNESView(snes, viewer)\n\nSee PETSc manual.\n\n\n\n\n\n","category":"method"},{"location":"wrappers/#GridapPETSc.PETSC.VecAXPBY-NTuple{4, Any}","page":"PETSc wrappers","title":"GridapPETSc.PETSC.VecAXPBY","text":"VecAXPBY(y, alpha, beta, x)\n\nSee PETSc manual.\n\n\n\n\n\n","category":"method"},{"location":"wrappers/#GridapPETSc.PETSC.VecAXPY-Tuple{Any, Any, Any}","page":"PETSc wrappers","title":"GridapPETSc.PETSC.VecAXPY","text":"VecAXPY(y, alpha, x)\n\nSee PETSc manual.\n\n\n\n\n\n","category":"method"},{"location":"wrappers/#GridapPETSc.PETSC.VecAYPX-Tuple{Any, Any, Any}","page":"PETSc wrappers","title":"GridapPETSc.PETSC.VecAYPX","text":"VecAYPX(y, beta, x)\n\nSee PETSc manual.\n\n\n\n\n\n","category":"method"},{"location":"wrappers/#GridapPETSc.PETSC.VecAssemblyBegin-Tuple{Any}","page":"PETSc wrappers","title":"GridapPETSc.PETSC.VecAssemblyBegin","text":"VecAssemblyBegin(vec)\n\nSee PETSc manual.\n\n\n\n\n\n","category":"method"},{"location":"wrappers/#GridapPETSc.PETSC.VecAssemblyEnd-Tuple{Any}","page":"PETSc wrappers","title":"GridapPETSc.PETSC.VecAssemblyEnd","text":"VecAssemblyEnd(vec)\n\nSee PETSc manual.\n\n\n\n\n\n","category":"method"},{"location":"wrappers/#GridapPETSc.PETSC.VecCopy-Tuple{Any, Any}","page":"PETSc wrappers","title":"GridapPETSc.PETSC.VecCopy","text":"VecCopy(x, y)\n\nSee PETSc manual.\n\n\n\n\n\n","category":"method"},{"location":"wrappers/#GridapPETSc.PETSC.VecCreateGhost-NTuple{6, Any}","page":"PETSc wrappers","title":"GridapPETSc.PETSC.VecCreateGhost","text":"VecCreateGhost(comm, n, N, nghost, ghosts, vv)\n\nSee PETSc manual.\n\n\n\n\n\n","category":"method"},{"location":"wrappers/#GridapPETSc.PETSC.VecCreateGhostWithArray-NTuple{7, Any}","page":"PETSc wrappers","title":"GridapPETSc.PETSC.VecCreateGhostWithArray","text":"VecCreateGhostWithArray(comm, n, N, nghost, ghosts, array, vv)\n\nSee PETSc manual.\n\n\n\n\n\n","category":"method"},{"location":"wrappers/#GridapPETSc.PETSC.VecCreateMPI-NTuple{4, Any}","page":"PETSc wrappers","title":"GridapPETSc.PETSC.VecCreateMPI","text":"VecCreateMPI(comm, n, N, v)\n\nSee PETSc manual.\n\n\n\n\n\n","category":"method"},{"location":"wrappers/#GridapPETSc.PETSC.VecCreateSeq-Tuple{Any, Any, Any}","page":"PETSc wrappers","title":"GridapPETSc.PETSC.VecCreateSeq","text":"VecCreateSeq(comm, n, vec)\n\nSee PETSc manual.\n\n\n\n\n\n","category":"method"},{"location":"wrappers/#GridapPETSc.PETSC.VecCreateSeqWithArray-NTuple{5, Any}","page":"PETSc wrappers","title":"GridapPETSc.PETSC.VecCreateSeqWithArray","text":"VecCreateSeqWithArray(comm, bs, n, array, vec)\n\nSee PETSc manual.\n\n\n\n\n\n","category":"method"},{"location":"wrappers/#GridapPETSc.PETSC.VecDestroy-Tuple{Any}","page":"PETSc wrappers","title":"GridapPETSc.PETSC.VecDestroy","text":"VecDestroy(vec)\n\nSee PETSc manual.\n\n\n\n\n\n","category":"method"},{"location":"wrappers/#GridapPETSc.PETSC.VecDuplicate-Tuple{Any, Any}","page":"PETSc wrappers","title":"GridapPETSc.PETSC.VecDuplicate","text":"VecDuplicate(v, newv)\n\nSee PETSc manual.\n\n\n\n\n\n","category":"method"},{"location":"wrappers/#GridapPETSc.PETSC.VecGetArray-Tuple{Any, Any}","page":"PETSc wrappers","title":"GridapPETSc.PETSC.VecGetArray","text":"VecGetArray(x, a)\n\nSee PETSc manual.\n\n\n\n\n\n","category":"method"},{"location":"wrappers/#GridapPETSc.PETSC.VecGetArrayRead-Tuple{Any, Any}","page":"PETSc wrappers","title":"GridapPETSc.PETSC.VecGetArrayRead","text":"VecGetArrayRead(x, a)\n\nSee PETSc manual.\n\n\n\n\n\n","category":"method"},{"location":"wrappers/#GridapPETSc.PETSC.VecGetArrayWrite-Tuple{Any, Any}","page":"PETSc wrappers","title":"GridapPETSc.PETSC.VecGetArrayWrite","text":"VecGetArrayWrite(x, a)\n\nSee PETSc manual.\n\n\n\n\n\n","category":"method"},{"location":"wrappers/#GridapPETSc.PETSC.VecGetLocalSize-Tuple{Any, Any}","page":"PETSc wrappers","title":"GridapPETSc.PETSC.VecGetLocalSize","text":"VecGetLocalSize(vec, n)\n\nSee PETSc manual.\n\n\n\n\n\n","category":"method"},{"location":"wrappers/#GridapPETSc.PETSC.VecGetSize-Tuple{Any, Any}","page":"PETSc wrappers","title":"GridapPETSc.PETSC.VecGetSize","text":"VecGetSize(vec, n)\n\nSee PETSc manual.\n\n\n\n\n\n","category":"method"},{"location":"wrappers/#GridapPETSc.PETSC.VecGetValues-NTuple{4, Any}","page":"PETSc wrappers","title":"GridapPETSc.PETSC.VecGetValues","text":"VecGetValues(x, ni, ix, y)\n\nSee PETSc manual.\n\n\n\n\n\n","category":"method"},{"location":"wrappers/#GridapPETSc.PETSC.VecGhostGetLocalForm-Tuple{Any, Any}","page":"PETSc wrappers","title":"GridapPETSc.PETSC.VecGhostGetLocalForm","text":"VecGhostGetLocalForm(g, l)\n\nSee PETSc manual.\n\n\n\n\n\n","category":"method"},{"location":"wrappers/#GridapPETSc.PETSC.VecGhostRestoreLocalForm-Tuple{Any, Any}","page":"PETSc wrappers","title":"GridapPETSc.PETSC.VecGhostRestoreLocalForm","text":"VecGhostRestoreLocalForm(g, l)\n\nSee PETSc manual.\n\n\n\n\n\n","category":"method"},{"location":"wrappers/#GridapPETSc.PETSC.VecNorm-Tuple{Any, Any, Any}","page":"PETSc wrappers","title":"GridapPETSc.PETSC.VecNorm","text":"VecNorm(x, typ, val)\n\nSee PETSc manual.\n\n\n\n\n\n","category":"method"},{"location":"wrappers/#GridapPETSc.PETSC.VecPlaceArray-Tuple{Any, Any}","page":"PETSc wrappers","title":"GridapPETSc.PETSC.VecPlaceArray","text":"VecPlaceArray(vec, array)\n\nSee PETSc manual.\n\n\n\n\n\n","category":"method"},{"location":"wrappers/#GridapPETSc.PETSC.VecResetArray-Tuple{Any}","page":"PETSc wrappers","title":"GridapPETSc.PETSC.VecResetArray","text":"VecResetArray(vec)\n\nSee PETSc manual.\n\n\n\n\n\n","category":"method"},{"location":"wrappers/#GridapPETSc.PETSC.VecRestoreArray-Tuple{Any, Any}","page":"PETSc wrappers","title":"GridapPETSc.PETSC.VecRestoreArray","text":"VecRestoreArray(x, a)\n\nSee PETSc manual.\n\n\n\n\n\n","category":"method"},{"location":"wrappers/#GridapPETSc.PETSC.VecRestoreArrayRead-Tuple{Any, Any}","page":"PETSc wrappers","title":"GridapPETSc.PETSC.VecRestoreArrayRead","text":"VecRestoreArrayRead(x, a)\n\nSee PETSc manual.\n\n\n\n\n\n","category":"method"},{"location":"wrappers/#GridapPETSc.PETSC.VecRestoreArrayWrite-Tuple{Any, Any}","page":"PETSc wrappers","title":"GridapPETSc.PETSC.VecRestoreArrayWrite","text":"VecRestoreArrayWrite(x, a)\n\nSee PETSc manual.\n\n\n\n\n\n","category":"method"},{"location":"wrappers/#GridapPETSc.PETSC.VecScale-Tuple{Any, Any}","page":"PETSc wrappers","title":"GridapPETSc.PETSC.VecScale","text":"VecScale(x, alpha)\n\nSee PETSc manual.\n\n\n\n\n\n","category":"method"},{"location":"wrappers/#GridapPETSc.PETSC.VecSet-Tuple{Any, Any}","page":"PETSc wrappers","title":"GridapPETSc.PETSC.VecSet","text":"VecSet(x, alpha)\n\nSee PETSc manual.\n\n\n\n\n\n","category":"method"},{"location":"wrappers/#GridapPETSc.PETSC.VecSetBlockSize-Tuple{Any, Any}","page":"PETSc wrappers","title":"GridapPETSc.PETSC.VecSetBlockSize","text":"VecSetBlockSize(v, bs)\n\nSee PETSc manual.\n\n\n\n\n\n","category":"method"},{"location":"wrappers/#GridapPETSc.PETSC.VecSetOption-Tuple{Any, Any, Any}","page":"PETSc wrappers","title":"GridapPETSc.PETSC.VecSetOption","text":"VecSetOption(x, op, flg)\n\nSee PETSc manual.\n\n\n\n\n\n","category":"method"},{"location":"wrappers/#GridapPETSc.PETSC.VecSetValues-NTuple{5, Any}","page":"PETSc wrappers","title":"GridapPETSc.PETSC.VecSetValues","text":"VecSetValues(x, ni, ix, y, iora)\n\nSee PETSc manual.\n\n\n\n\n\n","category":"method"},{"location":"wrappers/#GridapPETSc.PETSC.VecView-Tuple{Any, Any}","page":"PETSc wrappers","title":"GridapPETSc.PETSC.VecView","text":"VecView(vec, viewer)\n\nSee PETSc manual.\n\n\n\n\n\n","category":"method"},{"location":"wrappers/#GridapPETSc.PETSC.@PETSC_VIEWER_DRAW_SELF-Tuple{}","page":"PETSc wrappers","title":"GridapPETSc.PETSC.@PETSC_VIEWER_DRAW_SELF","text":"@PETSC_VIEWER_DRAW_SELF\n\nSee PETSc manual.\n\n\n\n\n\n","category":"macro"},{"location":"wrappers/#GridapPETSc.PETSC.@PETSC_VIEWER_DRAW_WORLD-Tuple{}","page":"PETSc wrappers","title":"GridapPETSc.PETSC.@PETSC_VIEWER_DRAW_WORLD","text":"@PETSC_VIEWER_DRAW_WORLD\n\nSee PETSc manual.\n\n\n\n\n\n","category":"macro"},{"location":"wrappers/#GridapPETSc.PETSC.@PETSC_VIEWER_STDOUT_SELF-Tuple{}","page":"PETSc wrappers","title":"GridapPETSc.PETSC.@PETSC_VIEWER_STDOUT_SELF","text":"@PETSC_VIEWER_STDOUT_SELF\n\nSee PETSc manual.\n\n\n\n\n\n","category":"macro"},{"location":"wrappers/#GridapPETSc.PETSC.@PETSC_VIEWER_STDOUT_WORLD-Tuple{}","page":"PETSc wrappers","title":"GridapPETSc.PETSC.@PETSC_VIEWER_STDOUT_WORLD","text":"@PETSC_VIEWER_STDOUT_WORLD\n\nSee PETSc manual.\n\n\n\n\n\n","category":"macro"},{"location":"wrappers/#GridapPETSc.PETSC.@check_error_code-Tuple{Any}","page":"PETSc wrappers","title":"GridapPETSc.PETSC.@check_error_code","text":"@check_error_code expr\n\nCheck if expr returns an error code equal to zero(PetscErrorCode). If not, throw an instance of PetscError.\n\n\n\n\n\n","category":"macro"},{"location":"wrappers/#GridapPETSc.PETSC.@wrapper-NTuple{5, Any}","page":"PETSc wrappers","title":"GridapPETSc.PETSC.@wrapper","text":"macro wrapper(fn,rt,argts,args,url)\n\nWrapper macro for PETSc's C functions.\n\nUsage:\n\nTo create a wrapper for PETSc's C function VecCreateSeq:\n\n@wrapper(:VecCreateSeq,PetscErrorCode,(MPI.Comm,PetscInt,Ptr{Vec}),(comm,n,vec),\"https://petsc.org/release/manualpages/Vec/VecCreateSeq/\")\n\nMany more examples can be found in the source code of the PETSc module.\n\n\n\n\n\n","category":"macro"},{"location":"library/#Julia-interfaces","page":"Julia interfaces","title":"Julia interfaces","text":"","category":"section"},{"location":"library/","page":"Julia interfaces","title":"Julia interfaces","text":"For the main PETSc objects (Vec,Mat,KSP, etc...) we provide high-level Julia interfaces that are easy to use and integrate with Julia's Array and SparseArray APIs. For distributed arrays, we support `PartitionedArrays.jl APIs.","category":"page"},{"location":"library/","page":"Julia interfaces","title":"Julia interfaces","text":"Modules = [GridapPETSc]","category":"page"},{"location":"library/#GridapPETSc.PETScIndexSet","page":"Julia interfaces","title":"GridapPETSc.PETScIndexSet","text":"struct PETScIndexSet\n\nJulia interface for a PETSc IS object.\n\n\n\n\n\n","category":"type"},{"location":"library/#GridapPETSc.PETScLinearSolver","page":"Julia interfaces","title":"GridapPETSc.PETScLinearSolver","text":"struct PETScLinearSolver <: LinearSolver\n\nJulia interface for a PETSc KSP object.\n\n\n\n\n\n","category":"type"},{"location":"library/#GridapPETSc.PETScMatrix","page":"Julia interfaces","title":"GridapPETSc.PETScMatrix","text":"struct PETScMatrix <: AbstractMatrix{PetscScalar}\n\nJulia interface for a PETSc Mat object.\n\n\n\n\n\n","category":"type"},{"location":"library/#GridapPETSc.PETScNonlinearSolver","page":"Julia interfaces","title":"GridapPETSc.PETScNonlinearSolver","text":"struct PETScNonlinearSolver{F} <: NonlinearSolver\n\nJulia interface for a PETSc SNES object.\n\n\n\n\n\n","category":"type"},{"location":"library/#GridapPETSc.PETScVector","page":"Julia interfaces","title":"GridapPETSc.PETScVector","text":"struct PETScVector <: AbstractVector{PetscScalar}\n\nJulia interface for a PETSc Vec object.\n\n\n\n\n\n","category":"type"},{"location":"library/#GridapPETSc.Finalize-Tuple{}","page":"Julia interfaces","title":"GridapPETSc.Finalize","text":"GridapPETSc.Finalize()\n\nFinalize PETSc and clean up resources. Wrapper for PetscFinalize.\n\n\n\n\n\n","category":"method"},{"location":"library/#GridapPETSc.Init-Tuple{}","page":"Julia interfaces","title":"GridapPETSc.Init","text":"GridapPETSc.Init(;args=String[],file=\"\",help=\"\",finalize_atexit=true)\n\nInitialize PETSc with optional command line arguments, a file name, and help text. Wrapper for PetscInitializeNoPointers.\n\n\n\n\n\n","category":"method"},{"location":"library/#GridapPETSc.Initialized-Tuple{}","page":"Julia interfaces","title":"GridapPETSc.Initialized","text":"GridapPETSc.Initialized()\n\nReturns true if PETSc has been initialized. Wrapper for PetscInitialized.\n\n\n\n\n\n","category":"method"},{"location":"library/#GridapPETSc.destroy-Tuple{Any}","page":"Julia interfaces","title":"GridapPETSc.destroy","text":"GridapPETSc.destroy(a)\n\nCall the appropriate PETSc destroy function for the object a. This is a collective operation and must be called on all processes at the same time.\n\n\n\n\n\n","category":"method"},{"location":"library/#GridapPETSc.gridap_petsc_gc-Tuple{}","page":"Julia interfaces","title":"GridapPETSc.gridap_petsc_gc","text":"GridapPETSc.gridap_petsc_gc()\n\nCall PetscObjectRegisterDestroyAll to destroy all PETSc objects registered for destruction. This is a collective operation and must be called on all processes at the same time.\n\n\n\n\n\n","category":"method"},{"location":"library/#GridapPETSc.with-Tuple{Any}","page":"Julia interfaces","title":"GridapPETSc.with","text":"GridapPETSc.with(f; kwargs...)\n\nSimilar to the Base.with execution block, but for PETSc:\n\nUsage:\n\n  GridapPETSc.with() do\n    # PETSc-dependent code here\n  end\n\n\n\n\n\n","category":"method"},{"location":"#GridapPETSc.jl","page":"Home","title":"GridapPETSc.jl","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"GridapPETSc is a plugin of GridapDistributed.jl that provides the  full set of scalable linear and nonlinear solvers in the PETSc library. It also provides serial solvers to Gridap.jl.","category":"page"},{"location":"#Installation","page":"Home","title":"Installation","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"GridapPETSc requires the PETSC library (Portable, Extensible Toolkit for Scientific Computation) and MPI to work correctly. You have two main options to install these dependencies:","category":"page"},{"location":"","page":"Home","title":"Home","text":"Do nothing [recommended in most cases]. Use the default precompiled MPI installation provided by MPI.jl and the pre-compiled PETSc library provided by PETSc_jll. This will happen under the hood when you install GridapPETSc. In the case of GridapPETSc, you can also force the installation of these default dependencies by setting the environment variable JULIA_PETSC_LIBRARY to an empty value.\nChoose a specific installation of MPI and PETSc available in the system [recommended in HPC clusters].\nFirst, choose a MPI installation. See the documentation of  MPI.jl for further details.\nSecond, choose a PETSc installation. To this end, create an environment variable JULIA_PETSC_LIBRARY containing the path to the dynamic library object of the PETSC installation (i.e., the .so file in linux systems). Very important: The chosen PETSc library needs to be configured with the MPI installation considered in the previous step.","category":"page"},{"location":"#Memory-management","page":"Home","title":"Memory management","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"In Julia, memory management is handled by the garbage collector (GC). When an object is unreachable, the GC will automatically reclaim its memory. When using distributed computing, the GC jobs are run independently on each task. This is not a problem for our own Julia objects, but it causes quite a lot of issues when combined with PETSc: The PETSc destroy routines have collective semantics, meaning they must be called on all processes at the same time. If this is not the case, the application will be softlocked.","category":"page"},{"location":"#Mimicking-GC-using-finalizers","page":"Home","title":"Mimicking GC using finalizers","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"In order to maintain a GC-like experience within GridapPETSc, we use finalizers for all our PETSc-related objects (PETScVector, PETScMatrix, ...).","category":"page"},{"location":"","page":"Home","title":"Home","text":"Within the finalizer, called by Julia's GC, we call PetscObjectRegisterDestroy. This is non-blocking and will therefore not cause a softlock. However it does not immediatley destroy the PETSc object, but rather delays its destruction until PetscObjectRegisterDestroyAll is called. This is usually called by PETSc at the end of the program, but can also be called manually by the user.","category":"page"},{"location":"","page":"Home","title":"Home","text":"The above, however, it heavily discouraged by PETSc. Moreover, there is a maximum number of objects that can be registered (defaults to 256, can be changed on compilation). The call to PetscObjectRegisterDestroyAll can be forced by calling GridapPETSc.gridap_petsc_gc, which will in theory empty the queue. We have noticed, however, that it can lead PETSc to crash.","category":"page"},{"location":"#Manual-memory-management","page":"Home","title":"Manual memory management","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"We therefore recommend the use of the GridapPETSc.destroy, which will call the appropriate destroy routine for each PETSc object. Note that, as mentioned above, this is a collective operation and must be called on all processes at the same time.","category":"page"},{"location":"","page":"Home","title":"Home","text":"An important note is that the GridapPETSc.destroy function will NOT destroy the Julia object itself, but only the underlying PETSc object. The Julia interface will be marked as un-initialized, but the memory will not be freed until Julia's GC runs on it.","category":"page"},{"location":"","page":"Home","title":"Home","text":"In some cases, and whenever possible, the underlying memory is aliased (shared) between the Julia interface and it's PETSc object. In this case, the memory itself is owned by Julia (not PETSc!) and will be freed when the Julia object is destroyed (not when GridapPETSc.destroy is called!). This means one can safely destroy the PETSc object without worrying about consequences on Julia's GC.","category":"page"}]
}
