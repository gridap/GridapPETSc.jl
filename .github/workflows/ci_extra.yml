name: CI_EXTRA
on: [push, pull_request]
jobs:
  test:
    name: Tests ${{ matrix.version }} - petsc ${{ matrix.petsc_version }} - ${{ matrix.os }} - ${{ matrix.arch }} - ${{ github.event_name }}
    runs-on: ${{ matrix.os }}
    env:
      JULIA_PETSC_LIBRARY: "/opt/petsc/${{ matrix.petsc_version }}/lib/libpetsc"
    strategy:
      fail-fast: false
      matrix:
        version:
          - '1.10'
        os:
          - ubuntu-latest
        arch:
          - x64
        petsc_version:
          - '3.15.4'
          - '3.22.0'
    steps:
      - uses: actions/checkout@v4
      - name: Cache petsc
        id: cache-petsc
        uses: actions/cache@v2
        with:
         path: ${{env.JULIA_PETSC_LIBRARY}}
         key: ${{ runner.os }}-build-${{ env.JULIA_PETSC_LIBRARY }}-
         restore-keys: |
          ${{ runner.os }}-build-${{ env.JULIA_PETSC_LIBRARY }}-
          ${{ runner.os }}-build-
          ${{ runner.os }}-  
      - uses: julia-actions/setup-julia@v2
        with:
          version: ${{ matrix.version }}
          arch: ${{ matrix.arch }}
      - name: Install petsc dependencies
        run: |
           sudo apt-get update 
           sudo apt-get install -y wget gfortran g++ openmpi-bin libopenmpi-dev  
      - name: Install petsc
        ##if: steps.cache-petsc.outputs.cache-hit != 'true'
        run: |
          CURR_DIR=$(pwd)
          PACKAGE=petsc
          VERSION=${{ matrix.petsc_version }}
          INSTALL_ROOT=/opt
          PETSC_INSTALL=$INSTALL_ROOT/$PACKAGE/$VERSION
          TAR_FILE=$PACKAGE-$VERSION.tar.gz
          URL="https://web.cels.anl.gov/projects/petsc/download/release-snapshots/"
          ROOT_DIR=/tmp
          SOURCES_DIR=$ROOT_DIR/$PACKAGE-$VERSION
          BUILD_DIR=$SOURCES_DIR/build
          wget -q $URL/$TAR_FILE -O $ROOT_DIR/$TAR_FILE
          mkdir -p $SOURCES_DIR
          tar xzf $ROOT_DIR/$TAR_FILE -C $SOURCES_DIR --strip-components=1
          cd $SOURCES_DIR
          ./configure --prefix=$PETSC_INSTALL --with-cc=mpicc --with-cxx=mpicxx --with-fc=mpif90 \
             --download-mumps --download-scalapack --download-parmetis --download-metis \
             --download-ptscotch --with-debugging --with-x=0 --with-shared=1 \
             --with-mpi=1 --with-64-bit-indices
          make
          make install
      - name: add MPIPreferences
        shell: julia --color=yes --project=. {0}
        run: |
          using Pkg
          Pkg.add("MPIPreferences")
      - name: use MPI system binary 
        shell: julia --color=yes --project=. {0}
        run: |
          using MPIPreferences
          MPIPreferences.use_system_binary()
      - run: julia --project=. -e 'using Pkg; Pkg.instantiate(); Pkg.build(); Pkg.precompile()'
      - run: julia --project=. --color=yes --check-bounds=yes test/sequential/runtests.jl
      - run: julia --project=. --color=yes --check-bounds=yes test/mpi/runtests.jl
